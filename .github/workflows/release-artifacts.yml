name: Build and Upload Release Artifacts

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to build artifacts for"
        required: true

permissions:
  contents: write
  id-token: write
  attestations: write

jobs:
  build-and-upload:
    name: Build and upload crs binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      OPAM_DESTDIR: ${{ github.workspace }}/opam-destdir

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3.x
          opam-repositories: |
            default: https://github.com/ocaml/opam-repository.git
            mbarbin: https://github.com/mbarbin/opam-repository.git

      - name: Set TAG_NAME variable
        run: |
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
          fi

      - name: Build artifacts
        run: |
          mkdir -p "$OPAM_DESTDIR"
          opam install ./crs.opam --destdir="$OPAM_DESTDIR"
        env:
          OPAMYES: "true"

      - name: Copy crs binary
        run: |
          os=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          arch=$(uname -m)
          bin_name="${{ github.workspace }}/crs-$TAG_NAME-$os-$arch"
          cp "$OPAM_DESTDIR/bin/crs" $bin_name
          echo "BIN_NAME=$bin_name" >> $GITHUB_ENV

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "${{ env.BIN_NAME }}"

      - name: Upload release artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: ${{ env.BIN_NAME }}
